{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\WinLayerRank.js"],"names":["cc","Class","extends","Component","properties","rankingScrollView","ScrollView","scrollViewContent","Node","prefabRankItem","Prefab","myrank","show","fetchFriendData","clearCanvas","removeChild","node","removeChildByTag","removeAllChildren","active","self","wx","getUserInfo","openIdList","success","userRes","console","log","data","userData","getFriendCloudStorage","keyList","res","sortedData","dataSort","i","length","playerInfo","item","instantiate","rankItem","getComponent","initView","addChild","y","selfData","getSelfData","userItem","fail","loadingLabel","Label","string","arr","level_data","JSON","parse","KVDataList","value","passtime_data","GlobalVar","curLevel","curLevelMinTime","push","sort","a","b","alldata","avatarUrl"],"mappings":"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","file":"WinLayerRank.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// var Util = require(\"Util\");\r\n// var GameConfig = require(\"ConstDefine\").GameConfig;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        rankingScrollView: cc.ScrollView,\r\n        scrollViewContent: cc.Node,\r\n        prefabRankItem: cc.Prefab\r\n    },\r\n\r\n    myrank: null,\r\n\r\n    // onLoad () {},\r\n\r\n    show () {\r\n        this.fetchFriendData();\r\n    },\r\n\r\n    clearCanvas(){\r\n        this.removeChild();\r\n    },\r\n\r\n    removeChild() {\r\n        this.node.removeChildByTag(1000);\r\n        this.scrollViewContent.removeAllChildren();\r\n\r\n        this.rankingScrollView.node.active = false;\r\n    },\r\n\r\n    fetchFriendData(){\r\n        var self = this;\r\n\r\n        self.rankingScrollView.node.active = true;\r\n\r\n        wx.getUserInfo({\r\n            openIdList: ['selfOpenId'],\r\n            success: (userRes) => {\r\n                console.log('getUserInfo success', userRes.data)\r\n                let userData = userRes.data[0];\r\n                //取出所有好友数据\r\n                wx.getFriendCloudStorage({\r\n                    keyList: ['level_num', 'pass_time'],\r\n                    success: res => {\r\n                        console.log(\"所有好友的托管数据\", res);\r\n                        let data = res.data;\r\n\r\n                        var sortedData = self.dataSort(data);\r\n\r\n                        console.log(\"排序后的数据\", sortedData);\r\n\r\n                        for (var i = 0; i < sortedData.length; i++) {\r\n                            if(i >= 10){\r\n                                break;\r\n                            }\r\n                            var playerInfo = sortedData[i];\r\n                            var item = cc.instantiate(self.prefabRankItem);\r\n                            var rankItem = item.getComponent('WinLayerRankItem');\r\n                            if(rankItem){\r\n                                rankItem.initView(i + 1, playerInfo, false);\r\n                            }\r\n                            self.scrollViewContent.addChild(item);\r\n                            item.y = -(i * 60);\r\n                        }\r\n\r\n                        var selfData = self.getSelfData(sortedData, userData);\r\n                        if(selfData){\r\n                            let userItem = cc.instantiate(self.prefabRankItem);\r\n                            userItem.getComponent('WinLayerRankItem').initView(self.myrank, selfData, true);\r\n                            userItem.y = -170;\r\n                            self.node.addChild(userItem, 1, 1000);\r\n                        }\r\n\r\n                        // if (data.length <= 8) {\r\n                        //     let layout = self.scrollViewContent.getComponent(cc.Layout);\r\n                        //     layout.resizeMode = cc.Layout.ResizeMode.NONE;\r\n                        // }\r\n                    },\r\n                    fail: res => {\r\n                        console.log(\"wx.getFriendCloudStorage fail\", res);\r\n                        self.loadingLabel.getComponent(cc.Label).string = \"数据加载失败，请检测网络，谢谢。\";\r\n                    },\r\n                });\r\n            },\r\n            fail: (res) => {\r\n                self.loadingLabel.getComponent(cc.Label).string = \"数据加载失败，请检测网络，谢谢。\";\r\n            }\r\n        });\r\n    },\r\n\r\n    dataSort(data){\r\n        var arr = [];\r\n\r\n        for(var i = 0;i < data.length;i ++){\r\n            var item = data[i];\r\n\r\n            var level_data = JSON.parse(item.KVDataList[0].value);\r\n            var passtime_data = JSON.parse(item.KVDataList[1].value);\r\n\r\n            if(passtime_data[GlobalVar.curLevel - 1] == 0){\r\n                continue;\r\n            }\r\n\r\n            if(passtime_data.length >= GlobalVar.curLevel){\r\n                item.curLevelMinTime = passtime_data[GlobalVar.curLevel - 1];\r\n                arr.push(item);\r\n            }\r\n        }\r\n\r\n        arr.sort((a, b) => {\r\n            if (a.KVDataList.length == 0 && b.KVDataList.length == 0) {\r\n                return 0;\r\n            }\r\n            if (a.KVDataList.length == 0) {\r\n                return 1;\r\n            }\r\n            if (b.KVDataList.length == 0) {\r\n                return -1;\r\n            }\r\n\r\n            return a.curLevelMinTime - b.curLevelMinTime;\r\n        });\r\n\r\n        return arr;\r\n    },\r\n    \r\n    getSelfData(alldata, userData){\r\n        for(var i = 0; i < alldata.length; i++){ \r\n            if(alldata[i].avatarUrl == userData.avatarUrl){\r\n                this.myrank = i + 1;\r\n                return alldata[i];\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}