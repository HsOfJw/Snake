{"version":3,"sources":["JJCYScene.js"],"names":["cc","Class","extends","Component","properties","jjcybg","Node","jjcyheadImg","Sprite","jjcyname","Label","jjcytime","onLoad","director","getWinSize","width","height","node","scaleX","show","self","wx","getFriendCloudStorage","keyList","success","console","log","res","data","dataItem","findData","GlobalVar","curLevel","initView","fail","loadingLabel","getComponent","string","clearCanvas","active","level_id","nextID","minTime","Number","MAX_VALUE","minIndex","i","length","item","level_data","JSON","parse","KVDataList","value","passtime_data","mintime","createImage","avatarUrl","setNodeText","nickname","text","label","CC_WECHATGAME","image","onload","texture","Texture2D","initWithElement","handleLoadedTexture","spriteFrame","SpriteFrame","e","src","loader","load","url","type","err"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,gBAAQL,GAAGM,IADH;AAERC,qBAAaP,GAAGQ,MAFR;AAGRC,kBAAUT,GAAGU,KAHL;AAIRC,kBAAUX,GAAGU;AAJL,KAHP;;AAULE,UAVK,oBAUK;AACN,YAAGZ,GAAGa,QAAH,CAAYC,UAAZ,GAAyBC,KAAzB,GAAiCf,GAAGa,QAAH,CAAYC,UAAZ,GAAyBE,MAA1D,GAAmE,KAAK,CAAxE,GAA4E,GAA/E,EAAmF;AAC/E,iBAAKC,IAAL,CAAUC,MAAV,GAAmBlB,GAAGa,QAAH,CAAYC,UAAZ,GAAyBC,KAAzB,GAAiC,IAApD;AACH;AACD;AACA;AACH,KAhBI;AAkBLI,QAlBK,kBAkBC;AACF,YAAIC,OAAO,IAAX;;AAEAC,WAAGC,qBAAH,CAAyB;AACrBC,qBAAS,CAAC,WAAD,EAAc,WAAd,CADY;AAErBC,qBAAS,sBAAO;AACZC,wBAAQC,GAAR,CAAY,kCAAZ,EAAgDC,GAAhD;AACA,oBAAIC,OAAOD,IAAIC,IAAf;;AAEA,oBAAIC,WAAWT,KAAKU,QAAL,CAAcF,IAAd,EAAoBG,UAAUC,QAA9B,CAAf;AACAZ,qBAAKa,QAAL,CAAcJ,QAAd;AACH,aARoB;AASrBK,kBAAM,mBAAO;AACTT,wBAAQC,GAAR,CAAY,+BAAZ,EAA6CC,GAA7C;AACAP,qBAAKe,YAAL,CAAkBC,YAAlB,CAA+BpC,GAAGU,KAAlC,EAAyC2B,MAAzC,GAAkD,kBAAlD;AACH;AAZoB,SAAzB;AAcH,KAnCI;AAqCLC,eArCK,yBAqCQ;AACT,aAAKjC,MAAL,CAAYkC,MAAZ,GAAqB,KAArB;AACH,KAvCI;AAyCLT,YAzCK,oBAyCIF,IAzCJ,EAyCUY,QAzCV,EAyCmB;AACpB,YAAIC,SAASD,WAAW,CAAxB;;AAEA;AACA,YAAIE,UAAUC,OAAOC,SAArB;AACA,YAAIC,WAAW,CAAC,CAAhB;AACA,aAAI,IAAIC,IAAI,CAAZ,EAAcA,IAAIlB,KAAKmB,MAAvB,EAA+BD,GAA/B,EAAoC;AAChC,gBAAIE,OAAOpB,KAAKkB,CAAL,CAAX;;AAEA,gBAAIG,aAAaC,KAAKC,KAAL,CAAWH,KAAKI,UAAL,CAAgB,CAAhB,EAAmBC,KAA9B,CAAjB;AACA,gBAAIC,gBAAgBJ,KAAKC,KAAL,CAAWH,KAAKI,UAAL,CAAgB,CAAhB,EAAmBC,KAA9B,CAApB;;AAEA,gBAAGJ,WAAWF,MAAX,GAAoBN,SAAS,CAA7B,IAAkCa,cAAcP,MAAd,GAAuBN,SAAS,CAAlE,IAAuEa,cAAcb,SAAS,CAAvB,KAA6B,CAAvG,EAAyG;AACrG;AACH;;AAED,gBAAGa,cAAcb,SAAS,CAAvB,IAA4BC,OAA/B,EAAuC;AACnCA,0BAAUY,cAAcb,SAAS,CAAvB,CAAV;AACAI,2BAAWC,CAAX;AACH;AACJ;;AAED,YAAGD,YAAY,CAAf,EAAiB;AACbjB,iBAAKiB,QAAL,EAAeU,OAAf,GAAyBb,OAAzB;AACA,mBAAOd,KAAKiB,QAAL,CAAP;AACH;;AAED,eAAO,IAAP;AACH,KArEI;AAuELZ,YAvEK,oBAuEIL,IAvEJ,EAuES;AACV,YAAGA,IAAH,EAAQ;AACJ,iBAAK4B,WAAL,CAAiB5B,KAAK6B,SAAtB;AACA,iBAAKC,WAAL,CAAiB,KAAKjD,QAAtB,EAAgCmB,KAAK+B,QAArC;AACA,iBAAKD,WAAL,CAAiB,KAAK/C,QAAtB,EAAgCiB,KAAK2B,OAArC;;AAEA,iBAAKlD,MAAL,CAAYkC,MAAZ,GAAqB,IAArB;AACH,SAND,MAMK;AACD,iBAAKlC,MAAL,CAAYkC,MAAZ,GAAqB,KAArB;AACH;;AAED;AACA,aAAK5B,QAAL,CAAc4B,MAAd,GAAuB,KAAvB;AACH,KApFI;AAsFLmB,eAtFK,uBAsFOzC,IAtFP,EAsFa2C,IAtFb,EAsFkB;AACnB,YAAIC,QAAQ5C,KAAKmB,YAAL,CAAkBpC,GAAGU,KAArB,CAAZ;AACA,YAAGmD,KAAH,EAAS;AACLA,kBAAMxB,MAAN,GAAeuB,IAAf;AACH;AACJ,KA3FI;AA6FLJ,eA7FK,uBA6FOC,SA7FP,EA6FkB;AACnB,YAAIrC,OAAO,IAAX;;AAEA,YAAI0C,aAAJ,EAAmB;AACf,gBAAI;AACA,oBAAIC,QAAQ1C,GAAGmC,WAAH,EAAZ;AACAO,sBAAMC,MAAN,GAAe,YAAM;AACjB,wBAAI;AACA,4BAAIC,UAAU,IAAIjE,GAAGkE,SAAP,EAAd;AACAD,gCAAQE,eAAR,CAAwBJ,KAAxB;AACAE,gCAAQG,mBAAR;AACAhD,6BAAKb,WAAL,CAAiB6B,YAAjB,CAA8BpC,GAAGQ,MAAjC,EAAyC6D,WAAzC,GAAuD,IAAIrE,GAAGsE,WAAP,CAAmBL,OAAnB,CAAvD;AACH,qBALD,CAKE,OAAOM,CAAP,EAAU;AACRvE,2BAAG0B,GAAH,CAAO6C,CAAP;AACAnD,6BAAKb,WAAL,CAAiBgC,MAAjB,GAA0B,KAA1B;AACH;AACJ,iBAVD;AAWAwB,sBAAMS,GAAN,GAAYf,SAAZ;AACH,aAdD,CAcC,OAAOc,CAAP,EAAU;AACPvE,mBAAG0B,GAAH,CAAO6C,CAAP;AACAnD,qBAAKH,IAAL,CAAUsB,MAAV,GAAmB,KAAnB;AACH;AACJ,SAnBD,MAmBO;AACHvC,eAAGyE,MAAH,CAAUC,IAAV,CAAe;AACXC,qBAAKlB,SADM,EACKmB,MAAM;AADX,aAAf,EAEG,UAACC,GAAD,EAAMZ,OAAN,EAAkB;AACjB7C,qBAAKb,WAAL,CAAiB6B,YAAjB,CAA8BpC,GAAGQ,MAAjC,EAAyC6D,WAAzC,GAAuD,IAAIrE,GAAGsE,WAAP,CAAmBL,OAAnB,CAAvD;AACH,aAJD;AAKH;AACJ;AACD;;AA3HK,CAAT","file":"JJCYScene.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        jjcybg: cc.Node,\r\n        jjcyheadImg: cc.Sprite,\r\n        jjcyname: cc.Label,\r\n        jjcytime: cc.Label\r\n    },\r\n\r\n    onLoad () {\r\n        if(cc.director.getWinSize().width / cc.director.getWinSize().height - 16 / 9 > 0.1){ \r\n            this.node.scaleX = cc.director.getWinSize().width / 1334;\r\n        }\r\n        // this.node.width = cc.director.getWinSize().width;\r\n        // this.node.height = cc.director.getWinSize().height;\r\n    },\r\n\r\n    show(){\r\n        var self = this;\r\n\r\n        wx.getFriendCloudStorage({\r\n            keyList: ['level_num', 'pass_time'],\r\n            success: res => {\r\n                console.log(\"wx.getFriendCloudStorage success\", res);\r\n                let data = res.data;\r\n\r\n                var dataItem = self.findData(data, GlobalVar.curLevel);\r\n                self.initView(dataItem);\r\n            },\r\n            fail: res => {\r\n                console.log(\"wx.getFriendCloudStorage fail\", res);\r\n                self.loadingLabel.getComponent(cc.Label).string = \"数据加载失败，请检测网络，谢谢。\";\r\n            },\r\n        });\r\n    },\r\n\r\n    clearCanvas(){\r\n        this.jjcybg.active = false;\r\n    },\r\n\r\n    findData(data, level_id){\r\n        var nextID = level_id + 1;\r\n\r\n        //首先找出符合要求的玩家数据(通关下一关卡用时最短的玩家)\r\n        var minTime = Number.MAX_VALUE;\r\n        var minIndex = -1;\r\n        for(var i = 0;i < data.length; i ++){\r\n            var item = data[i];\r\n\r\n            var level_data = JSON.parse(item.KVDataList[0].value);\r\n            var passtime_data = JSON.parse(item.KVDataList[1].value);\r\n\r\n            if(level_data.length < nextID - 1 || passtime_data.length < nextID - 1 || passtime_data[nextID - 1] == 0){\r\n                continue;\r\n            }\r\n\r\n            if(passtime_data[nextID - 1] < minTime){\r\n                minTime = passtime_data[nextID - 1];\r\n                minIndex = i;\r\n            }\r\n        }\r\n\r\n        if(minIndex >= 0){\r\n            data[minIndex].mintime = minTime;\r\n            return data[minIndex];\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    initView(data){\r\n        if(data){\r\n            this.createImage(data.avatarUrl);\r\n            this.setNodeText(this.jjcyname, data.nickname);\r\n            this.setNodeText(this.jjcytime, data.mintime);\r\n\r\n            this.jjcybg.active = true;\r\n        }else{\r\n            this.jjcybg.active = false;\r\n        }\r\n\r\n        //不显示时间了\r\n        this.jjcytime.active = false;\r\n    },\r\n\r\n    setNodeText(node, text){\r\n        var label = node.getComponent(cc.Label);\r\n        if(label){\r\n            label.string = text;\r\n        }\r\n    },\r\n\r\n    createImage(avatarUrl) {\r\n        var self = this;\r\n\r\n        if (CC_WECHATGAME) {\r\n            try {\r\n                let image = wx.createImage();\r\n                image.onload = () => {\r\n                    try {\r\n                        let texture = new cc.Texture2D();\r\n                        texture.initWithElement(image);\r\n                        texture.handleLoadedTexture();\r\n                        self.jjcyheadImg.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(texture);\r\n                    } catch (e) {\r\n                        cc.log(e);\r\n                        self.jjcyheadImg.active = false;\r\n                    }\r\n                };\r\n                image.src = avatarUrl;\r\n            }catch (e) {\r\n                cc.log(e);\r\n                self.node.active = false;\r\n            }\r\n        } else {\r\n            cc.loader.load({\r\n                url: avatarUrl, type: 'jpg'\r\n            }, (err, texture) => {\r\n                self.jjcyheadImg.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(texture);\r\n            });\r\n        }\r\n    }\r\n    // update (dt) {},\r\n});\r\n"]}