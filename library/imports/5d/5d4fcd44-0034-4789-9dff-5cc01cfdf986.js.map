{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\LevelData.js"],"names":["GlobalVar","require","LevelData","allLevelData","challengeCount","curDate","GetInitInfoObj","levelInfo","i","GameConfig","LevelNum","levelObj","DisposeUnusualData","bFlag","levelData","lock_state","pass_time","daojishi","click_count","reset_count","SaveLevelData","ReadChallengeCount","Date","key","toLocaleDateString","dataObj","dataStr","GameLocalData","GetLevelChallengeCount","JSON","parse","undefined","SaveChallengeCount","SaveLevelChallengeCount","UseChallengeCount","GetChallengeCount","SetChallengeCount","value","ReadLevelData","info","levelInfoObj","IsLockedLevel","level_id","isValidLevelID","UpdateLockStateData","UpdateLockydrawData","lockydraw","UpdatePassTime","passtime","UpdateDaojishiData","Game","curLevel","GetClickCount","levelID","AddClickCount","AddResetCount","ClearResetCount","GetResetCount","UpdateNextLockstateData","UpdateCurLockydrawData","UpdateCurPassTime","GetCurLockydrawData","GetCurPassTime","IsPlayedLevel","IsPlayedCurLevel","IsPlayDaojishi","GenerateUserCloudData","kvDataList","level_data","time_data","push","level_obj","stringify","time_obj","module","exports"],"mappings":"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","file":"LevelData.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["var GlobalVar = require(\"GlobalVar\");\r\n\r\nvar LevelData = {\r\n\r\n    allLevelData: null,\r\n\r\n    challengeCount: null,\r\n\r\n    curDate: null,\r\n\r\n    GetInitInfoObj:function(){\r\n        var levelInfo = {};\r\n        for(var i = 1;i <= GameConfig.LevelNum; i++){\r\n            var levelObj = {};\r\n            levelObj[\"lock_state\"] = false;\r\n            levelObj[\"lockydraw\"] = false;\r\n            levelObj[\"pass_time\"] = 0;\r\n            levelObj[\"daojishi\"] = false;\r\n            levelObj[\"click_count\"] = 0;\r\n            levelObj[\"reset_count\"] = 0;\r\n\r\n            if(i == 1){\r\n                levelObj[\"lock_state\"] = true;\r\n            }\r\n\r\n            levelInfo[i] = levelObj;\r\n        }\r\n\r\n        return levelInfo;\r\n    },\r\n\r\n    //处理异常的数据(跳过解锁的情况)\r\n    DisposeUnusualData: function(){\r\n        var bFlag = false;\r\n\r\n        for(var i = 0;i < GameConfig.LevelNum; i ++){\r\n            var levelData = this.allLevelData[i];\r\n            if(bFlag){\r\n                levelData.lock_state = false;\r\n                levelData.pass_time = 0;\r\n                levelData.daojishi = false;\r\n                levelData.click_count = 0;\r\n                levelData.reset_count = 0;\r\n            }\r\n            if(levelData && !bFlag && levelData.lock_state == false){\r\n                bFlag = true;\r\n            }\r\n        }\r\n\r\n        this.SaveLevelData();\r\n    },\r\n\r\n    //读取关卡剩余挑战次数\r\n    ReadChallengeCount: function(){\r\n        this.curDate = new Date();\r\n\r\n        var key = this.curDate.toLocaleDateString();\r\n\r\n        var dataObj = null;\r\n        var dataStr = GameLocalData.GetLevelChallengeCount();\r\n        if(dataStr){\r\n            dataObj = JSON.parse(dataStr);\r\n        }\r\n\r\n        if(!dataObj || dataObj[key] == undefined){\r\n            this.challengeCount = 0;\r\n        }else{\r\n            this.challengeCount = dataObj[key];\r\n        }\r\n    },\r\n\r\n    //保存关卡挑战次数\r\n    SaveChallengeCount: function(){\r\n        if(this.curDate){\r\n            var key = this.curDate.toLocaleDateString();\r\n\r\n            var dataObj = {\r\n            };\r\n\r\n            dataObj[key] = this.challengeCount;\r\n\r\n            GameLocalData.SaveLevelChallengeCount(dataObj);\r\n        }\r\n    },\r\n\r\n    UseChallengeCount: function(){\r\n        this.challengeCount += 1;\r\n\r\n        this.SaveChallengeCount();\r\n    },\r\n\r\n    GetChallengeCount: function(){\r\n        return this.challengeCount;\r\n    },\r\n\r\n    SetChallengeCount: function(value){\r\n        this.challengeCount = value;\r\n\r\n        this.SaveChallengeCount();\r\n    },\r\n    \r\n    ReadLevelData: function(){\r\n        if(!this.allLevelData){\r\n            var info = GameLocalData.ReadLevelData();\r\n            if(!info){\r\n                this.allLevelData = LevelData.GetInitInfoObj();\r\n            }else{\r\n                this.allLevelData = info;\r\n            }\r\n        }\r\n        return this.allLevelData;\r\n    },\r\n\r\n    SaveLevelData: function(levelInfoObj){\r\n        if(!levelInfoObj){\r\n            levelInfoObj = this.allLevelData;\r\n        }\r\n\r\n        if(levelInfoObj){\r\n            GameLocalData.SaveLevelData(levelInfoObj);\r\n        }\r\n    },\r\n\r\n    IsLockedLevel: function(level_id){\r\n        if(this.isValidLevelID(level_id) == false){\r\n            return false;\r\n        }\r\n\r\n        var allLevelData = this.allLevelData;\r\n        if(allLevelData){\r\n            var levelData = allLevelData[level_id];\r\n            if(levelData){\r\n                return levelData[\"lock_state\"];\r\n            }\r\n        }\r\n    },\r\n\r\n    UpdateLockStateData: function(level_id, lock_state){\r\n        if(this.isValidLevelID(level_id) == false){\r\n            return false;\r\n        }\r\n\r\n        var allLevelData = this.allLevelData;\r\n        if(allLevelData){\r\n            var levelData = allLevelData[level_id];\r\n            levelData[\"lock_state\"] = lock_state;\r\n        }\r\n        this.SaveLevelData();\r\n    },\r\n\r\n    UpdateLockydrawData: function(level_id, lockydraw){\r\n        if(this.isValidLevelID(level_id) == false){\r\n            return false;\r\n        }\r\n\r\n        var allLevelData = this.allLevelData;\r\n        if(allLevelData){\r\n            var levelData = allLevelData[level_id];\r\n            levelData[\"lockydraw\"] = lockydraw;\r\n        }\r\n        this.SaveLevelData();\r\n    },\r\n\r\n    UpdatePassTime: function(level_id, passtime){\r\n        if(this.isValidLevelID(level_id) == false){\r\n            return false;\r\n        }\r\n\r\n        var allLevelData = this.allLevelData;\r\n        if(allLevelData){\r\n            var levelData = allLevelData[level_id];\r\n            levelData[\"pass_time\"] = passtime;\r\n        }\r\n\r\n        this.SaveLevelData();\r\n    },\r\n\r\n    UpdateDaojishiData: function(){\r\n        var allLevelData = this.allLevelData;\r\n        if(allLevelData){\r\n            var levelData = allLevelData[Game.GlobalVar.curLevel];\r\n            levelData[\"daojishi\"] = true;\r\n        }\r\n\r\n        this.SaveLevelData();\r\n    },\r\n\r\n    GetClickCount: function(levelID){\r\n        var allLevelData = this.allLevelData;\r\n        if(allLevelData){\r\n            var levelData = allLevelData[levelID];\r\n            if(levelData.click_count == undefined){\r\n                levelData.click_count = 0;\r\n            }\r\n            return levelData.click_count;\r\n        }\r\n    },\r\n\r\n    AddClickCount: function(levelID){\r\n        var allLevelData = this.allLevelData;\r\n        if(allLevelData){\r\n            var levelData = allLevelData[levelID];\r\n            if(levelData.click_count == undefined){\r\n                levelData.click_count = 0;\r\n            }\r\n            levelData.click_count ++;\r\n        }\r\n\r\n        this.SaveLevelData();\r\n    },\r\n\r\n    AddResetCount: function(levelID){\r\n        var allLevelData = this.allLevelData;\r\n        if(allLevelData){\r\n            var levelData = allLevelData[levelID];\r\n            if(levelData.reset_count == undefined){\r\n                levelData.reset_count = 0;\r\n            }\r\n            levelData.reset_count ++;\r\n        }\r\n        this.SaveLevelData();\r\n    },\r\n\r\n    ClearResetCount: function(levelID){\r\n        var allLevelData = this.allLevelData;\r\n        if(allLevelData){\r\n            var levelData = allLevelData[levelID];\r\n            if(levelData.reset_count == undefined){\r\n                levelData.reset_count = 0;\r\n            }\r\n            levelData.reset_count = 0;\r\n        }\r\n        this.SaveLevelData();\r\n    },\r\n\r\n    GetResetCount: function(levelID){\r\n        var allLevelData = this.allLevelData;\r\n        if(allLevelData){\r\n            var levelData = allLevelData[levelID];\r\n            if(levelData.reset_count == undefined){\r\n                levelData.reset_count = 0;\r\n            }\r\n            return levelData.reset_count;\r\n        }\r\n    },\r\n\r\n    UpdateNextLockstateData: function(lock_state){\r\n        LevelData.UpdateLockStateData(Game.GlobalVar.curLevel + 1, lock_state);\r\n    },\r\n\r\n    UpdateCurLockydrawData: function(lockydraw){\r\n        LevelData.UpdateLockydrawData(Game.GlobalVar.curLevel, lockydraw);\r\n    },\r\n\r\n    UpdateCurPassTime: function(pass_time){\r\n        LevelData.UpdatePassTime(Game.GlobalVar.curLevel, pass_time);\r\n    },\r\n\r\n    GetCurLockydrawData: function(){\r\n        //debug\r\n        return false;\r\n\r\n        var allLevelData = this.allLevelData;\r\n        if(allLevelData){\r\n            var levelData = allLevelData[Game.GlobalVar.curLevel];\r\n            return levelData[\"lockydraw\"];\r\n        }\r\n    },\r\n\r\n    GetCurPassTime: function(){\r\n        var allLevelData = this.allLevelData;\r\n        if(allLevelData){\r\n            var levelData = allLevelData[Game.GlobalVar.curLevel];\r\n            return levelData.pass_time;\r\n        }\r\n    },\r\n\r\n    IsPlayedLevel: function(levelID){\r\n        var allLevelData = this.allLevelData;\r\n        if(allLevelData){\r\n            var levelData = allLevelData[levelID];\r\n            if(levelData.pass_time == 0 || levelData.pass_time == undefined){\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n\r\n    IsPlayedCurLevel: function(){\r\n        return this.IsPlayedLevel(Game.GlobalVar.curLevel);\r\n    },\r\n\r\n    IsPlayDaojishi: function(){\r\n        if(this.IsPlayedCurLevel()){\r\n            return true;\r\n        }\r\n\r\n        var allLevelData = this.allLevelData;\r\n        if(allLevelData){\r\n            var levelData = allLevelData[Game.GlobalVar.curLevel];\r\n            if(levelData.daojishi){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n    GenerateUserCloudData: function(){\r\n        var kvDataList = [];\r\n\r\n        var level_data = [];\r\n        var time_data = [];\r\n\r\n        if(this.allLevelData){\r\n            for(var level_id in this.allLevelData){\r\n                if(this.allLevelData[level_id].lock_state){\r\n                    level_data.push(level_id);\r\n                    time_data.push(this.allLevelData[level_id].pass_time);\r\n                }\r\n            }\r\n        }\r\n\r\n        var level_obj = {\r\n            key: \"level_num\",\r\n            value: JSON.stringify(level_data)\r\n        }\r\n\r\n        var time_obj = {\r\n            key: \"pass_time\",\r\n            value: JSON.stringify(time_data)\r\n        }\r\n\r\n        kvDataList.push(level_obj);\r\n        kvDataList.push(time_obj);\r\n\r\n        return kvDataList;\r\n    },\r\n\r\n\r\n    isValidLevelID(level_id){\r\n        if(level_id >= 1 && level_id <= GameConfig.LevelNum){\r\n            return true;\r\n        }\r\n        \r\n        return false;\r\n    },\r\n};\r\n\r\nmodule.exports = LevelData;"]}