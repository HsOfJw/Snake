{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\scene/assets\\scripts\\scene\\GameScene.js"],"names":["MoveDirection","require","Util","WXHelper","LevelData","Snakes","JJCYView","SceneCom","GameRes","AdvertiseMgr","AdvertiseConfig","cc","Class","extends","Component","properties","winLayerNode","default","type","Node","failLayerNode","lockydrawLayerNode","levelNum","bctimeText","selectBtn","replayBtn","popUpPrefab","Prefab","isStart","lockydrawLayer","openDoorNode","closeDoorNode","isOver","curTime","moveLogic","shelterTileVec","isMoving","outLevelMaskNode","jjcyView","stoneMgr","appleMgr","diciMgr","onLoad","self","GetComponent","node","RegBtnClickEvent","selectLevelClicked","bind","replayBtnClicked","initEventListen","init","start","IsPlayedLevel","Game","GlobalVar","curLevel","UseChallengeCount","reset","unscheduleAllCallbacks","closeReplayEffect","length","Clear","snakes","doExit","destroy","ClearSharedCanvas","MapUtil","Reset","SetNodeText","loadIndex","isLoading","isLoadFinish","isGameOver","gameOverLayer","getComponent","hide","getPassLevelMinTime","schedule","refreshUI","UpdateDaojishiData","initGame","resetGame","joinNextLevel","GameConfig","LevelNum","GetChallengeCount","popUpNode","instantiate","addContext","show","IsWXContext","CreateVideoAd","ADConfig_Relive_Video","isFinish","SetChallengeCount","addChild","initMap","level_id","mapNode","theMap","addComponent","TiledMap","tmxAsset","loader","getRes","TiledMapAsset","Init","recreateTiled","InitEnd","releaseRes","i","GameSceneRes","res","generateSnake","GenerateApple","generateDoor","GenerateDiCi","GenerateStone","refreshZIndex","showJJCYView","snakeNode","stoneNode","startCountdown","jjcyNode","getChildByName","setView","EventCenter","RegisterEvent","uuid","MessageType","Ctr_Snake_Move_To_Left","move","MD_Left","Ctr_Snake_Move_To_Right","MD_Right","Ctr_Snake_Move_To_Up","MD_Up","Ctr_Snake_Move_To_Down","MD_Down","Snake_Move_Finish","updateSnakeGID","updateStoneGID","isDeatch","doDespairFace","gameOver","isAdjacentToApple","doAtTheMouthFace","Snake_Drop_Finish","isNotMove","replayEffect","Stone_Drop_Finish","CheckIsNotMove","isStoneDroping","isWin","isStatic","ClickedLockydrawBtn","Game_MIN_TIME_REP","time","refreshMinTimeUI","Game_MIN_TIME_REP_NO_DATA","Join_Next_Level","Reset_Start_Game","GAME_WIN","GAME_FAIL","Update_Game_Object_ZIndex","Check_Stone_Drop","SetMyDropDirtyFlag","clearEventListen","RemoveEvent","sendPassLevelTime","SendMessage","SendPassLevelTime","SendGetPassLevelMinTime","generateApple","allAppleGID","GetAppleGID","gid","pos","ConvertGIDToPos","posx","x","winSize","width","posy","y","height","sprite","Sprite","spriteFrame","SpriteFrame","setTexture","url","raw","setPosition","create","GetDoorGID","GetMapBlockSize","opendoorNode","CreateSprite","setAnchorPoint","p","closedoorNode","terrainGID","GetMapTerrainGID","terrain","obj","GetTiledSpriteFrame","push","tid","ConvertGIDToTID","log","newarr","concat","getAllNode","GetAllStoneNode","GetAllAppleNode","GetAllDiCiNode","NodeSort","zIndex","UpdateStoneGID","GetAllStoneGID","UpdateSnakeGID","getAllGID","isOpenDaojishi","IsPlayDaojishi","countDownCom","play","moveDirection","isCanMove","AudioManager","playDirectionSound","outLevel","isTouchDiCi","playBeiCiSound","appleGID","isEatingApple","eatApple","curGID","getHeadCurGID","upGid","GetUpGID","downGid","GetDownGID","leftGid","GetLeftGID","rightGid","GetRightGID","appleGIDVec","GetAllAppleGID","isAdjacentToDici","assert","allDiCiGID","GetAllDiCiGID","diciGID","isVertical","nextGid","GetNextGID","direction","RemoveAppleByGID","isEatedApple","playEatAppleSound","isDroping","GetDiCiGID","snakesGID","gidobj","j","snakeGID","nextGID","doorGID","minTimeImg","minTimeText","active","Label","string","outLevelMask","changeParent","winDirection","maskNode","maskCom","Mask","inverted","size","position","playButtonSound","SceneMgr","switchScene","SceneType","SelectScene","GetResetCount","ClearResetCount","AddResetCount","stopAllActions","opacity","update","dt","FrameOnMove","frameOnMove","win","failed","playWinSound","isNewRecrod","IsPlayedCurLevel","beforeTime","GetCurPassTime","UpdateCurPassTime","UpdateNextLockstateData","UploadUserCloudStorage","GenerateUserCloudData","playFailSound","onDestroy"],"mappings":"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","file":"GameScene.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\scene","sourcesContent":["var MoveDirection = require('ConstDefine').MoveDirection;\r\nvar Util = require('Util');\r\nvar WXHelper = require(\"WXHelper\");\r\nvar LevelData = require(\"LevelData\");\r\nvar Snakes = require(\"Snakes\");\r\nvar JJCYView = require('JJCYView');\r\nvar SceneCom = require(\"SceneCom\");\r\nvar GameRes = require(\"GameRes\");\r\nvar AdvertiseMgr = require(\"AdvertiseMgr\");\r\nvar AdvertiseConfig = require(\"AdvertiseConfig\");\r\nvar LevelData = require(\"LevelData\");\r\n\r\n\r\n/**\r\n * 游戏的核心逻辑\r\n */\r\n\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        winLayerNode: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        failLayerNode: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        lockydrawLayerNode: cc.Node,\r\n\r\n        levelNum: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        bctimeText: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        selectBtn: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        replayBtn: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        popUpPrefab: {\r\n            default: null,\r\n            type: cc.Prefab,\r\n        },\r\n    },\r\n\r\n    isStart: false,\r\n    lockydrawLayer: null,\r\n\r\n    openDoorNode: null,\r\n    closeDoorNode: null,\r\n\r\n    isOver: false,\r\n    curTime: null,\r\n\r\n    moveLogic: null,\r\n\r\n    shelterTileVec: null,\r\n    isMoving: null,\r\n\r\n    outLevelMaskNode: null,\r\n\r\n    jjcyView: null,\r\n\r\n    stoneMgr: null,\r\n    appleMgr: null,\r\n    diciMgr: null,\r\n\r\n    onLoad() {\r\n        var self = this;\r\n\r\n        this.moveLogic = Util.GetComponent(this.node, \"MoveLogic\");\r\n        this.lockydrawLayer = Util.GetComponent(this.lockydrawLayerNode, \"LockydrawLayer\");\r\n        this.stoneMgr = Util.GetComponent(this.node, \"StoneMgr\");\r\n        this.appleMgr = Util.GetComponent(this.node, \"AppleMgr\");\r\n        this.diciMgr = Util.GetComponent(this.node, \"DiCiMgr\");\r\n\r\n        Util.RegBtnClickEvent(this.selectBtn, this.selectLevelClicked.bind(this));\r\n        Util.RegBtnClickEvent(this.replayBtn, this.replayBtnClicked.bind(this));\r\n\r\n        var self = this;\r\n\r\n        //注册游戏事件监听\r\n        this.initEventListen();\r\n\r\n        this.moveLogic.init();\r\n\r\n        this.init();\r\n    },\r\n\r\n    start() {\r\n        // var self = this;\r\n\r\n        // //注册游戏事件监听\r\n        // this.initEventListen();\r\n\r\n        // this.init();\r\n\r\n        // this.moveLogic.init();\r\n\r\n        if (LevelData.IsPlayedLevel(Game.GlobalVar.curLevel) == false) {\r\n            //已解锁但未通关\r\n\r\n            //添加挑战次数\r\n            LevelData.UseChallengeCount();\r\n        }\r\n    },\r\n\r\n    reset() {\r\n        //清除所有定时器\r\n        this.unscheduleAllCallbacks();\r\n\r\n        this.closeReplayEffect();\r\n\r\n        if (this.shelterTileVec) {\r\n            this.shelterTileVec.length = 0;\r\n        }\r\n\r\n        this.outLevelMaskNode = null;\r\n        this.openDoorNode = null;\r\n        this.closeDoorNode = null;\r\n\r\n        if (this.jjcyView) {\r\n            this.jjcyView = null;\r\n        }\r\n\r\n        if (this.stoneMgr) {\r\n            this.stoneMgr.Clear();\r\n        }\r\n\r\n        if (this.appleMgr) {\r\n            this.appleMgr.Clear();\r\n        }\r\n\r\n        if (this.diciMgr) {\r\n            this.diciMgr.Clear();\r\n        }\r\n\r\n        if (this.snakes) {\r\n            this.snakes.doExit();\r\n            this.snakes.destroy();\r\n        }\r\n\r\n        if (this.moveLogic) {\r\n            this.moveLogic.reset();\r\n        }\r\n\r\n        WXHelper.ClearSharedCanvas();\r\n        Game.MapUtil.Reset();\r\n    },\r\n\r\n    init() {\r\n        var self = this;\r\n\r\n        if (this.levelNum) {\r\n            Util.SetNodeText(this.levelNum, Game.GlobalVar.curLevel);\r\n        }\r\n        this.snakes = new Snakes();\r\n        this.isOver = false;\r\n        this.loadIndex = 0;\r\n        this.isLoading = false;\r\n        this.curTime = 0;\r\n        this.isLoadFinish = false;\r\n        this.isStart = false;\r\n        this.isMoving = false;\r\n        Game.GlobalVar.isGameOver = false;\r\n\r\n        if (this.winLayerNode) {\r\n            var gameOverLayer = this.winLayerNode.getComponent(\"GameOverLayer\");\r\n            gameOverLayer.hide();\r\n        }\r\n\r\n        if (this.failLayerNode) {\r\n            var gameOverLayer = this.failLayerNode.getComponent(\"GameOverLayer\");\r\n            gameOverLayer.hide();\r\n        }\r\n\r\n        if (this.bctimeText) {\r\n            Util.SetNodeText(this.bctimeText, 0);\r\n        }\r\n\r\n        //获取当前关卡的最短过关时间\r\n        this.getPassLevelMinTime();\r\n\r\n        this.schedule(function () {\r\n            self.refreshUI();\r\n        }, 1, \"RefreshUI\");\r\n\r\n        LevelData.UpdateDaojishiData();\r\n\r\n        this.initGame();\r\n    },\r\n\r\n    resetGame() {\r\n        this.reset();\r\n        this.init();\r\n    },\r\n\r\n    joinNextLevel() {\r\n        if (Game.GlobalVar.curLevel == GameConfig.LevelNum) {\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n\r\n        if (LevelData.GetChallengeCount() >= 5) {\r\n            if (self.popUpPrefab) {\r\n                var popUpNode = cc.instantiate(self.popUpPrefab);\r\n                popUpNode.getComponent(\"PopUpLayer\").addContext(1);\r\n                popUpNode.getComponent(\"PopUpLayer\").show(function () {\r\n                    if (WXHelper.IsWXContext()) {\r\n                        //创建视频广告\r\n                        AdvertiseMgr.CreateVideoAd(AdvertiseConfig.ADConfig_Relive_Video, function (isFinish) {\r\n                            if (isFinish) {\r\n                                LevelData.SetChallengeCount(0);\r\n\r\n                                //添加挑战次数\r\n                                LevelData.UseChallengeCount();\r\n\r\n                                self.reset();\r\n                                Game.GlobalVar.curLevel++;\r\n                                self.init();\r\n                            }\r\n                        });\r\n                    } else {\r\n                        LevelData.SetChallengeCount(0);\r\n\r\n                        //添加挑战次数\r\n                        LevelData.UseChallengeCount();\r\n\r\n                        self.reset();\r\n                        Game.GlobalVar.curLevel++;\r\n                        self.init();\r\n                    }\r\n                });\r\n                self.node.addChild(popUpNode, 1000);\r\n            }\r\n            return;\r\n        } else {\r\n            self.reset();\r\n            Game.GlobalVar.curLevel++;\r\n            self.init();\r\n        }\r\n    },\r\n\r\n    //初始化地图信息\r\n    initMap(level_id) {\r\n        var self = this;\r\n\r\n        // 获取 TiledMap 组件\r\n        var mapNode = new cc.Node();\r\n        var theMap = mapNode.addComponent(cc.TiledMap);\r\n\r\n        var tmxAsset = cc.loader.getRes('map/level_' + level_id, cc.TiledMapAsset);\r\n        theMap.tmxAsset = tmxAsset\r\n\r\n        Game.MapUtil.Init(theMap);\r\n\r\n        //重新创建地图块\r\n        this.recreateTiled();\r\n\r\n        mapNode = null;\r\n\r\n        Game.MapUtil.InitEnd();\r\n    },\r\n\r\n    //释放资源\r\n    releaseRes() {\r\n        for (var i = 0; i < GameRes.GameSceneRes.length; i++) {\r\n            var res = GameRes.GameSceneRes[i];\r\n            cc.loader.releaseRes(res);\r\n        }\r\n    },\r\n\r\n    initGame() {\r\n        var self = this;\r\n\r\n        //初始化地图信息\r\n        this.initMap(Game.GlobalVar.curLevel);\r\n\r\n        //生成蛇\r\n        this.generateSnake();\r\n        //生成苹果\r\n        this.appleMgr.GenerateApple(this.snakes);\r\n        //生成过关的门\r\n        this.generateDoor();\r\n        //生成地刺\r\n        this.diciMgr.GenerateDiCi(this.snakes);\r\n        //生成石头\r\n        this.stoneMgr.GenerateStone(this.snakes);\r\n        //所有所有对象的层级\r\n        this.refreshZIndex();\r\n        // //显示即将超越的玩家\r\n        this.showJJCYView();\r\n\r\n        this.moveLogic.snakeNode = this.snakes;\r\n        this.moveLogic.stoneNode = this.stoneMgr;\r\n\r\n        this.startCountdown();\r\n    },\r\n\r\n    //显示即将超越的玩家\r\n    showJJCYView() {\r\n        var self = this;\r\n\r\n        var jjcyNode = this.node.getChildByName(\"JJCYSprite\");\r\n        if (jjcyNode) {\r\n            this.jjcyView = new JJCYView();\r\n            this.jjcyView.setView(jjcyNode);\r\n            this.jjcyView.show();\r\n        }\r\n    },\r\n\r\n    initEventListen() {\r\n        var self = this;\r\n\r\n        //控制蛇的移动\r\n        Game.EventCenter.RegisterEvent(this.uuid, Game.MessageType.Ctr_Snake_Move_To_Left, function () {\r\n            self.move(MoveDirection.MD_Left);\r\n        });\r\n        Game.EventCenter.RegisterEvent(this.uuid, Game.MessageType.Ctr_Snake_Move_To_Right, function () {\r\n            self.move(MoveDirection.MD_Right);\r\n        });\r\n        Game.EventCenter.RegisterEvent(this.uuid, Game.MessageType.Ctr_Snake_Move_To_Up, function () {\r\n            self.move(MoveDirection.MD_Up);\r\n        });\r\n        Game.EventCenter.RegisterEvent(this.uuid, Game.MessageType.Ctr_Snake_Move_To_Down, function () {\r\n            self.move(MoveDirection.MD_Down);\r\n        });\r\n\r\n        Game.EventCenter.RegisterEvent(this.uuid, Game.MessageType.Snake_Move_Finish, function () {\r\n            if (self.isOver)\r\n                return;\r\n\r\n            self.updateSnakeGID();\r\n\r\n            self.updateStoneGID();\r\n\r\n            if (self.isDeatch()) {\r\n                //被刺死了\r\n                self.snakes.doDespairFace();\r\n                self.gameOver(false);\r\n            }\r\n\r\n            if (self.isAdjacentToApple()) {\r\n                //蛇头与苹果同边相邻\r\n                self.snakes.doAtTheMouthFace();\r\n            }\r\n\r\n            self.isMoving = false;\r\n        });\r\n\r\n        Game.EventCenter.RegisterEvent(this.uuid, Game.MessageType.Snake_Drop_Finish, function () {\r\n            if (Game.GlobalVar.isGameOver)\r\n                return;\r\n\r\n            if (self.moveLogic.isNotMove()) {\r\n                //不能动了, 提示重玩\r\n                self.replayEffect();\r\n            }\r\n\r\n            if (self.isDeatch()) {\r\n                //被刺死了\r\n                self.snakes.doDespairFace();\r\n                self.gameOver(false);\r\n            }\r\n\r\n            if (self.isAdjacentToApple()) {\r\n                //蛇头与苹果同边相邻\r\n                self.snakes.doAtTheMouthFace();\r\n            }\r\n\r\n            self.updateSnakeGID();\r\n        });\r\n\r\n        Game.EventCenter.RegisterEvent(this.uuid, Game.MessageType.Stone_Drop_Finish, function () {\r\n            if (Game.GlobalVar.isGameOver)\r\n                return;\r\n\r\n            self.updateStoneGID();\r\n\r\n            if (self.moveLogic.isNotMove()) {\r\n                //提示重玩\r\n                self.replayEffect();\r\n            }\r\n        });\r\n\r\n        Game.EventCenter.RegisterEvent(this.uuid, Game.MessageType.CheckIsNotMove, function () {\r\n            if (Game.GlobalVar.isStoneDroping || Game.GlobalVar.isGameOver || Game.GlobalVar.isWin) {\r\n                return;\r\n            }\r\n\r\n            if (self.snakes.isStatic() == false) {\r\n                return;\r\n            }\r\n\r\n            if (self.moveLogic.isNotMove()) {\r\n                //提示重玩\r\n                self.replayEffect();\r\n            }\r\n        });\r\n\r\n        Game.EventCenter.RegisterEvent(this.uuid, Game.MessageType.ClickedLockydrawBtn, function () {\r\n            if (self.lockydrawLayer) {\r\n                self.lockydrawLayer.show();\r\n            }\r\n        });\r\n\r\n\r\n        //获取到当前关卡通关用时最少的时间成功\r\n        Game.EventCenter.RegisterEvent(this.uuid, Game.MessageType.Game_MIN_TIME_REP, function (time) {\r\n            self.refreshMinTimeUI(time);\r\n        });\r\n\r\n        //获取到当前关卡通关用时最少的时间失败 没有数据\r\n        Game.EventCenter.RegisterEvent(this.uuid, Game.MessageType.Game_MIN_TIME_REP_NO_DATA, function () {\r\n            self.refreshMinTimeUI(0);\r\n        });\r\n\r\n        //进入下一关\r\n        Game.EventCenter.RegisterEvent(this.uuid, Game.MessageType.Join_Next_Level, function () {\r\n            self.joinNextLevel(true);\r\n        });\r\n\r\n        //重新开始\r\n        Game.EventCenter.RegisterEvent(this.uuid, Game.MessageType.Reset_Start_Game, function () {\r\n            self.resetGame(true);\r\n        });\r\n\r\n        //过关了\r\n        Game.EventCenter.RegisterEvent(this.uuid, Game.MessageType.GAME_WIN, function () {\r\n            self.gameOver(true);\r\n        });\r\n\r\n        //失败了\r\n        Game.EventCenter.RegisterEvent(this.uuid, Game.MessageType.GAME_FAIL, function () {\r\n            self.gameOver(false);\r\n        });\r\n\r\n        //刷新游戏对象的层级\r\n        Game.EventCenter.RegisterEvent(this.uuid, Game.MessageType.Update_Game_Object_ZIndex, function () {\r\n            self.refreshZIndex();\r\n        });\r\n\r\n        //检查石头是否掉落\r\n        Game.EventCenter.RegisterEvent(this.uuid, Game.MessageType.Check_Stone_Drop, function () {\r\n            self.stoneMgr.SetMyDropDirtyFlag();\r\n        });\r\n    },\r\n\r\n    clearEventListen() {\r\n        Game.EventCenter.RemoveEvent(this.uuid);\r\n    },\r\n\r\n    //上传玩家本次通关时间\r\n    sendPassLevelTime() {\r\n        Game.SendMessage.SendPassLevelTime(Game.GlobalVar.curLevel, this.curTime);\r\n    },\r\n\r\n    //获取当前关卡通关的最短时间\r\n    getPassLevelMinTime() {\r\n        Game.SendMessage.SendGetPassLevelMinTime(Game.GlobalVar.curLevel);\r\n    },\r\n\r\n    //生成苹果\r\n    generateApple() {\r\n        var allAppleGID = Game.MapUtil.GetAppleGID();\r\n        for (var i = 0; i < allAppleGID.length; i++) {\r\n            var gid = allAppleGID[i];\r\n            if (gid > 0) {\r\n                var pos = Game.MapUtil.ConvertGIDToPos(gid);\r\n                var posx = pos.x - cc.winSize.width * 0.5;\r\n                var posy = pos.y - cc.winSize.height * 0.5;\r\n\r\n                var node = new cc.Node('AppleNode');\r\n                var sprite = node.addComponent(cc.Sprite);\r\n                sprite.spriteFrame = new cc.SpriteFrame();\r\n                sprite.spriteFrame.setTexture(cc.url.raw('resources/gamescene/apple.png'));\r\n                node.setPosition(pos);\r\n                node.gid = gid;\r\n                this.snakes.addChild(node, 10);\r\n            }\r\n        }\r\n    },\r\n\r\n    //生成蛇\r\n    generateSnake() {\r\n        //创建蛇\r\n        this.snakes.create();\r\n        this.node.addChild(this.snakes);\r\n    },\r\n\r\n    //生成门\r\n    generateDoor() {\r\n        var gid = Game.MapUtil.GetDoorGID();\r\n        var pos = Game.MapUtil.ConvertGIDToPos(gid);\r\n\r\n        pos.y -= Game.MapUtil.GetMapBlockSize().height * 0.5;\r\n\r\n        var opendoorNode = Util.CreateSprite(\"opendoorNode\", cc.url.raw('resources/gamescene/open_door.png'));\r\n        opendoorNode.setAnchorPoint(cc.p(0.5, 0));\r\n        opendoorNode.setPosition(pos);\r\n        opendoorNode.gid = gid;\r\n\r\n        var closedoorNode = Util.CreateSprite('closedoorNode', cc.url.raw('resources/gamescene/close_door.png'));\r\n        closedoorNode.setAnchorPoint(cc.p(0.5, 0));\r\n        closedoorNode.setPosition(pos);\r\n        closedoorNode.gid = gid - 1;\r\n\r\n        this.snakes.addChild(opendoorNode, 5);\r\n        this.snakes.addChild(closedoorNode, 20);\r\n\r\n        this.closeDoorNode = closedoorNode;\r\n        this.openDoorNode = opendoorNode;\r\n    },\r\n\r\n    //重新创建地图块(移除Tiled编辑器里拼好的，为了处理层级问题)\r\n    recreateTiled() {\r\n        if (!this.shelterTileVec) {\r\n            this.shelterTileVec = [];\r\n        }\r\n\r\n        var terrainGID = Game.MapUtil.GetMapTerrainGID();\r\n\r\n        if (this.shelterTileVec.length == 0) {\r\n            for (var i = 0; i < terrainGID.length; i++) {\r\n                var terrain = terrainGID[i];\r\n                var obj = Game.MapUtil.GetTiledSpriteFrame(terrain);\r\n                if (obj) {\r\n                    var node = new cc.Node(\"node\");\r\n                    var sprite = node.addComponent(cc.Sprite);\r\n                    sprite.spriteFrame = obj.spriteFrame;\r\n                    node.gid = terrain;\r\n                    // node.color = new cc.Color(0,0,0,255);\r\n                    node.setPosition(obj.pos);\r\n                    this.snakes.addChild(node, 20);\r\n                    this.shelterTileVec.push(node);\r\n                } else {\r\n                    var tid = Game.MapUtil.ConvertGIDToTID(terrain);\r\n                    cc.log('terrain:(' + tid.x + \",\" + tid.y + \")\" + \"not find\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    //刷新所有对象的层级\r\n    refreshZIndex() {\r\n        var newarr = this.shelterTileVec.concat(this.snakes.getAllNode());\r\n        newarr = newarr.concat(this.stoneMgr.GetAllStoneNode());\r\n        newarr = newarr.concat(this.closeDoorNode);\r\n        newarr = newarr.concat(this.openDoorNode);\r\n        newarr = newarr.concat(this.appleMgr.GetAllAppleNode());\r\n        newarr = newarr.concat(this.diciMgr.GetAllDiCiNode());\r\n        // if(this.outLevelMaskNode){\r\n        //     this.outLevelMaskNode.gid = this.snakes.getHeadCurGID();\r\n        //     newarr.push(this.outLevelMaskNode);\r\n        // }\r\n\r\n        Util.NodeSort(newarr);\r\n\r\n        for (var i = 0; i < newarr.length; i++) {\r\n            var node = newarr[i];\r\n            // node.setGlobalZOrder(i+10);\r\n            node.zIndex = i + 10;\r\n        }\r\n        // this.snakes.refreshZIndex();\r\n    },\r\n\r\n    //刷新石头的GID\r\n    updateStoneGID() {\r\n        Game.MapUtil.UpdateStoneGID(this.stoneMgr.GetAllStoneGID());\r\n    },\r\n\r\n    //刷新蛇的GID\r\n    updateSnakeGID() {\r\n        Game.MapUtil.UpdateSnakeGID(this.snakes.getAllGID());\r\n    },\r\n\r\n    //倒计时\r\n    startCountdown() {\r\n        if (!GameConfig.isOpenDaojishi || LevelData.IsPlayDaojishi()) {\r\n            this.isStart = true;\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n\r\n        var countDownCom = Util.GetComponent(this.node, \"ComCountDown\");\r\n        if (countDownCom) {\r\n            countDownCom.play(function () {\r\n                self.isStart = true;\r\n            });\r\n        }\r\n    },\r\n\r\n    move(moveDirection) {\r\n        if (this.isMoving) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (this.moveLogic.isCanMove(moveDirection)) {\r\n            this.isMoving = true;\r\n            Game.AudioManager.playDirectionSound();\r\n\r\n            if (this.isWin(moveDirection)) {\r\n                this.outLevel(moveDirection);\r\n                return;\r\n            }\r\n\r\n            if (this.isTouchDiCi(moveDirection)) {\r\n                Game.AudioManager.playBeiCiSound();\r\n            }\r\n\r\n            var appleGID = this.isEatingApple(moveDirection);\r\n\r\n            if (appleGID >= 0) {\r\n                this.eatApple(moveDirection, appleGID);\r\n            } else {\r\n                this.moveLogic.moveLogic(moveDirection);\r\n            }\r\n        }\r\n    },\r\n\r\n    //判断蛇头是否与苹果同边相邻\r\n    isAdjacentToApple() {\r\n        if (this.snakes == null || this.snakes.isStatic() == false) {\r\n            return false;\r\n        }\r\n\r\n        if (!this.appleMgr) {\r\n            return;\r\n        }\r\n\r\n        var curGID = this.snakes.getHeadCurGID();\r\n        var upGid = Game.MapUtil.GetUpGID(curGID);\r\n        var downGid = Game.MapUtil.GetDownGID(curGID);\r\n        var leftGid = Game.MapUtil.GetLeftGID(curGID);\r\n        var rightGid = Game.MapUtil.GetRightGID(curGID);\r\n\r\n        var appleGIDVec = this.appleMgr.GetAllAppleGID();\r\n\r\n        for (var i = 0; i < appleGIDVec.length; i++) {\r\n            var appleGID = appleGIDVec[i];\r\n            if (appleGID) {\r\n                if (upGid === appleGID) {\r\n                    return true;\r\n                } else if (downGid === appleGID) {\r\n                    return true;\r\n                } else if (leftGid === appleGID) {\r\n                    return true;\r\n                } else if (rightGid === appleGID) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n    //判断蛇头是否与地刺同边相邻\r\n    isAdjacentToDici() {\r\n        cc.assert(this.diciMgr, \"this.diciMgr is null.\");\r\n\r\n        var curGID = this.snakes.getHeadCurGID();\r\n        var upGid = Game.MapUtil.GetUpGID(curGID);\r\n        var downGid = Game.MapUtil.GetDownGID(curGID);\r\n        var leftGid = Game.MapUtil.GetLeftGID(curGID);\r\n        var rightGid = Game.MapUtil.GetRightGID(curGID);\r\n\r\n        var allDiCiGID = this.diciMgr.GetAllDiCiGID();\r\n\r\n        for (var i = 0; i < allDiCiGID.length; i++) {\r\n            var diciGID = allDiCiGID[i];\r\n            if (diciGID) {\r\n                if (upGid === diciGID) {\r\n                    return true;\r\n                } else if (downGid === diciGID) {\r\n                    return true;\r\n                } else if (leftGid === diciGID) {\r\n                    return true;\r\n                } else if (rightGid === diciGID) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n    isEatingApple(moveDirection) {\r\n        if (moveDirection == MoveDirection.MD_Up) {\r\n            if (this.snakes.isVertical()) {\r\n                return -1;\r\n            }\r\n        }\r\n\r\n        if (!this.appleMgr) {\r\n            return -1;\r\n        }\r\n\r\n        var curGID = this.snakes.getHeadCurGID();\r\n        var nextGid = Game.MapUtil.GetNextGID(moveDirection, curGID);\r\n\r\n        var appleGIDVec = this.appleMgr.GetAllAppleGID();\r\n\r\n        for (var i = 0; i < appleGIDVec.length; i++) {\r\n            var appleGID = appleGIDVec[i];\r\n            if (appleGID == nextGid) {\r\n                return appleGID;\r\n            }\r\n        }\r\n        return -1;\r\n    },\r\n\r\n    //吃苹果\r\n    eatApple(direction, appleGID) {\r\n        this.isMoving = true;\r\n\r\n        if (this.appleMgr) {\r\n            this.appleMgr.RemoveAppleByGID(appleGID);\r\n        }\r\n\r\n        if (this.snakes) {\r\n            this.snakes.eatApple(direction, appleGID);\r\n        }\r\n\r\n        Game.GlobalVar.isEatedApple = true;\r\n        Game.AudioManager.playEatAppleSound();\r\n    },\r\n\r\n    //判断是否被刺死了\r\n    isDeatch(direction) {\r\n        if (Game.GlobalVar.isDroping)\r\n            return false;\r\n\r\n        var diciGID = Game.MapUtil.GetDiCiGID();\r\n        var snakesGID = this.snakes.getAllGID();\r\n        for (var i = 0; i < diciGID.length; i++) {\r\n            var gidobj = diciGID[i];\r\n            for (var j = 0; j < snakesGID.length; j++) {\r\n                var snakeGID = snakesGID[j];\r\n\r\n                if (gidobj.gid == snakeGID) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    //是否碰到了地刺\r\n    isTouchDiCi(direction) {\r\n        var diciGID = Game.MapUtil.GetDiCiGID();\r\n        var curGID = this.snakes.getHeadCurGID();\r\n        var nextGID = Game.MapUtil.GetNextGID(direction);\r\n        for (var i = 0; i < diciGID.length; i++) {\r\n            var gidobj = diciGID[i];\r\n            if (gidobj.gid == nextGID) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    //判断下一个操作是否胜利\r\n    isWin(direction) {\r\n\r\n        if (direction == MoveDirection.MD_Up) {\r\n            if (this.snakes.isVertical()) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        var doorGID = Game.MapUtil.GetDoorGID();\r\n\r\n        var curGID = this.snakes.getHeadCurGID();\r\n        var nextGid = Game.MapUtil.GetNextGID(direction, curGID);\r\n        if (nextGid == doorGID) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    //刷新UI\r\n    refreshUI() {\r\n        if (this.isStart == false)\r\n            return;\r\n\r\n        this.curTime++;\r\n\r\n        if (this.bctimeText) {\r\n            Util.SetNodeText(this.bctimeText, this.curTime);\r\n        }\r\n\r\n    },\r\n\r\n    //刷新最短时间\r\n    refreshMinTimeUI(time) {\r\n        var minTimeImg = this.node.getChildByName(\"ZDTimeImg\");\r\n        var minTimeText = this.node.getChildByName(\"ZDTimeText\");\r\n\r\n        if (minTimeImg) {\r\n            minTimeImg.active = (time <= 0);\r\n        }\r\n\r\n        if (minTimeText) {\r\n            minTimeText.active = (time > 0);\r\n            if (minTimeText.active) {\r\n                minTimeText.getComponent(cc.Label).string = time;\r\n            }\r\n        }\r\n    },\r\n\r\n    //过关\r\n    outLevel(direction) {\r\n        Game.GlobalVar.isWin = true;\r\n        this.closeDoorNode.active = false;\r\n        this.snakes.isWin = true;\r\n        this.snakes.outLevel(direction);\r\n        this.outLevelMask(direction);\r\n        this.snakes.changeParent(this.outLevelMaskNode);\r\n        this.moveLogic.isWin = true;\r\n        this.moveLogic.winDirection = direction;\r\n\r\n        this.moveLogic.moveLogic(direction);\r\n    },\r\n\r\n    //生成过关遮罩\r\n    outLevelMask(direction) {\r\n        var maskNode = new cc.Node(\"OutLevelMask\");\r\n        if (maskNode) {\r\n            this.snakes.addChild(maskNode);\r\n            var maskCom = maskNode.addComponent(cc.Mask);\r\n            if (maskCom) {\r\n                maskCom.inverted = true;\r\n            }\r\n            maskNode.zIndex = 1000;\r\n            var size = 60;\r\n            var gid = Game.MapUtil.GetDoorGID();\r\n            var pos = Game.MapUtil.ConvertGIDToPos(gid);\r\n            switch (direction) {\r\n                case MoveDirection.MD_Left:\r\n                    maskNode.setAnchorPoint(cc.p(1, 0.5));\r\n                    maskNode.width = cc.winSize.width;\r\n                    maskNode.height = size;\r\n                    break;\r\n                case MoveDirection.MD_Right:\r\n                    maskNode.setAnchorPoint(cc.p(0, 0.5));\r\n                    maskNode.width = cc.winSize.width;\r\n                    maskNode.height = size;\r\n                    break;\r\n                case MoveDirection.MD_Up:\r\n                    maskNode.setAnchorPoint(cc.p(0.5, 0));\r\n                    maskNode.width = size;\r\n                    maskNode.height = cc.winSize.height;\r\n                    break;\r\n                case MoveDirection.MD_Down:\r\n                    maskNode.setAnchorPoint(cc.p(0.5, 1));\r\n                    maskNode.width = size;\r\n                    maskNode.height = cc.winSize.height;\r\n                    break;\r\n            }\r\n\r\n            maskNode.position = pos;\r\n            this.outLevelMaskNode = maskNode;\r\n        }\r\n    },\r\n\r\n    //选择关卡按钮点击\r\n    selectLevelClicked() {\r\n        if (this.isStart == false)\r\n            return;\r\n\r\n        Game.AudioManager.playButtonSound();\r\n\r\n        Game.SceneMgr.switchScene(Game.SceneType.SelectScene);\r\n    },\r\n\r\n    //重玩按钮点击\r\n    replayBtnClicked() {\r\n        if (this.isStart == false)\r\n            return;\r\n\r\n        Game.AudioManager.playButtonSound();\r\n\r\n        this.closeReplayEffect();\r\n\r\n        if (LevelData.GetResetCount(Game.GlobalVar.curLevel) == 5) {\r\n\r\n            var self = this;\r\n\r\n            if (this.popUpPrefab) {\r\n                var popUpNode = cc.instantiate(this.popUpPrefab);\r\n                popUpNode.getComponent(\"PopUpLayer\").addContext(2);\r\n                popUpNode.getComponent(\"PopUpLayer\").show(function () {\r\n                    if (WXHelper.IsWXContext()) {\r\n                        //创建视频广告\r\n                        AdvertiseMgr.CreateVideoAd(AdvertiseConfig.ADConfig_Relive_Video, function (isFinish) {\r\n                            if (isFinish) {\r\n                                LevelData.ClearResetCount(Game.GlobalVar.curLevel);\r\n                                //记录重置次数\r\n                                LevelData.AddResetCount(Game.GlobalVar.curLevel);\r\n                                self.resetGame();\r\n                            }\r\n                        });\r\n                    } else {\r\n                        LevelData.ClearResetCount(Game.GlobalVar.curLevel);\r\n                        //记录重置次数\r\n                        LevelData.AddResetCount(Game.GlobalVar.curLevel);\r\n                        self.resetGame();\r\n                    }\r\n                });\r\n\r\n                this.node.addChild(popUpNode, 1000);\r\n            }\r\n            return;\r\n        }\r\n\r\n        //记录重置次数\r\n        LevelData.AddResetCount(Game.GlobalVar.curLevel);\r\n\r\n        this.resetGame();\r\n    },\r\n\r\n    //提示重玩动画\r\n    replayEffect() {\r\n        // this.replayBtn.runAction(new cc.repeatForever(new cc.blink(0.3, 1)));\r\n    },\r\n\r\n    //取消提示重玩\r\n    closeReplayEffect() {\r\n        if (this.replayBtn) {\r\n            this.replayBtn.stopAllActions();\r\n            this.replayBtn.opacity = 255;\r\n        }\r\n    },\r\n\r\n    //每帧调用\r\n    update(dt) {\r\n\r\n        if (this.isOver) {\r\n            return;\r\n        }\r\n\r\n        //刷新即将超越视图\r\n        if (this.jjcyView) {\r\n            this.jjcyView.update(dt);\r\n        }\r\n\r\n        if (this.stoneMgr) {\r\n            this.stoneMgr.FrameOnMove(dt);\r\n        }\r\n\r\n        if (this.snakes) {\r\n            this.snakes.frameOnMove(dt);\r\n        }\r\n\r\n        Game.EventCenter.FrameOnMove(dt);\r\n    },\r\n\r\n    //游戏结束\r\n    gameOver(isWin) {\r\n\r\n        Game.GlobalVar.isGameOver = true;\r\n        Game.GlobalVar.isStoneDroping = false;\r\n        Game.GlobalVar.isEatedApple = false;\r\n        Game.GlobalVar.isWin = isWin;\r\n        Game.GlobalVar.isDroping = false;\r\n\r\n        this.unscheduleAllCallbacks();\r\n        WXHelper.ClearSharedCanvas();\r\n\r\n        if (isWin) {\r\n            this.win();\r\n        } else {\r\n            this.failed();\r\n        }\r\n\r\n        this.snakes.gameOver();\r\n        this.isOver = true;\r\n\r\n        // Game.MapUtil.Reset();\r\n    },\r\n\r\n    //胜利\r\n    win() {\r\n        Game.AudioManager.playWinSound();\r\n\r\n        var isNewRecrod = false;\r\n\r\n        if (LevelData.IsPlayedCurLevel()) {\r\n            var beforeTime = LevelData.GetCurPassTime();\r\n            if (this.curTime < beforeTime) {\r\n                //刷新过关记录\r\n                LevelData.UpdateCurPassTime(this.curTime);\r\n                isNewRecrod = true;\r\n            }\r\n        } else {\r\n            //刷新过关记录\r\n            LevelData.UpdateCurPassTime(this.curTime);\r\n            isNewRecrod = true;\r\n        }\r\n\r\n\r\n        // this.snakes.destroy();\r\n\r\n        var gameOverLayer = this.winLayerNode.getComponent(\"GameOverLayer\");\r\n        gameOverLayer.show(isNewRecrod);\r\n\r\n        //解锁下一关卡\r\n        LevelData.UpdateNextLockstateData(true);\r\n\r\n        //上传用户托管数据\r\n        WXHelper.UploadUserCloudStorage(LevelData.GenerateUserCloudData());\r\n\r\n        //发送通关时间给服务器\r\n        this.sendPassLevelTime();\r\n    },\r\n\r\n    //失败\r\n    failed() {\r\n        Game.AudioManager.playFailSound();\r\n\r\n\r\n        var gameOverLayer = this.failLayerNode.getComponent(\"GameOverLayer\");\r\n        gameOverLayer.show(false, true);\r\n    },\r\n\r\n    onDestroy() {\r\n        cc.log(\"Game-->>>onDestroy\");\r\n\r\n        //移除游戏事件监听\r\n        this.clearEventListen();\r\n\r\n        this.releaseRes();\r\n    }\r\n});\r\n"]}