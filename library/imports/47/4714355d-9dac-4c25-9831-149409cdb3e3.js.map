{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\SnakeHead.js"],"names":["SnakeNode","require","MoveDirection","SnakeDirection","cc","Class","extends","direction","curState","ctor","setName","parseInt","Game","MapUtil","GetProperty","sprite","spriteFrame","setTexture","url","raw","refreshPos","arguments","doRotateAction","gid","newPos","getNewPos","setPosition","tiledwidth","GetMapBlockSize","width","ConvertGIDToPos","Offset","MD_Left","x","MD_Right","MD_Up","y","MD_Down","isChanged","director","getWinSize","parent","convertToNodeSpaceAR","setDirection","preDirection","moveFinish","GlobalVar","isEatedApple","doMeetFace","doNormalFace","dropFinish","snakes","doTransfrom","SD_Up","SD_Right","SD_Down","SD_Left","rotate","rotation","_super","SpriteFrame","doAtTheMouthFace","doDespairFace"],"mappings":"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","file":"SnakeHead.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["var SnakeNode = require(\"SnakeNode\");\r\nvar MoveDirection = require('ConstDefine').MoveDirection;\r\nvar SnakeDirection = require('ConstDefine').SnakeDirection;\r\n\r\ncc.Class({\r\n    extends: SnakeNode,\r\n\r\n    direction: null,\r\n\r\n    curState: null,\r\n\r\n    ctor(){\r\n        this.setName(\"SnakeHead\");\r\n        this.curState = 0;\r\n\r\n        var direction = parseInt(Game.MapUtil.GetProperty(\"startPos_1\", \"direction\")); \r\n        if(direction >= 0){\r\n            this.direction = direction;\r\n        }\r\n        this.sprite.spriteFrame.setTexture(cc.url.raw('resources/gamescene/head1.png'));\r\n\r\n        this.refreshPos(arguments[0]);\r\n        this.doRotateAction();\r\n    },\r\n    \r\n    refreshPos(gid){\r\n        if(this.sprite){\r\n            var newPos = this.getNewPos(gid);\r\n            this.setPosition(newPos);\r\n        }\r\n    },\r\n    \r\n    getNewPos: function(gid){\r\n        var tiledwidth = Game.MapUtil.GetMapBlockSize().width;\r\n        var newPos = Game.MapUtil.ConvertGIDToPos(gid);\r\n        var Offset = (this.width - tiledwidth) * 0.5;\r\n\r\n        switch(this.direction){\r\n            case MoveDirection.MD_Left:\r\n            {\r\n                newPos.x -= Offset;\r\n                break;\r\n            }\r\n            case MoveDirection.MD_Right:\r\n            {\r\n                newPos.x += Offset;\r\n                break;\r\n            }\r\n            case MoveDirection.MD_Up:\r\n            {\r\n                newPos.y += Offset;\r\n                break;\r\n            }\r\n            case MoveDirection.MD_Down:\r\n            {\r\n                newPos.y -= Offset;\r\n                break;\r\n            }\r\n            default:\r\n            {\r\n                newPos.x += Offset;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(this.isChanged){\r\n            newPos.x += (cc.director.getWinSize().width - 1334) * 0.5;\r\n            newPos = this.parent.convertToNodeSpaceAR(newPos);\r\n        }\r\n\r\n        return newPos;\r\n    },\r\n    \r\n    setDirection: function(direction){\r\n        this.preDirection = this.direction;\r\n\r\n        this.direction = direction;\r\n    },\r\n\r\n    moveFinish(){\r\n        if(Game.GlobalVar.isEatedApple){\r\n            this.doMeetFace();\r\n            Game.GlobalVar.isEatedApple = false;\r\n\r\n            return;\r\n        }\r\n\r\n        this.doNormalFace();\r\n    },\r\n\r\n    dropFinish(){\r\n        this.snakes.dropFinish();\r\n    },\r\n\r\n    doTransfrom: function(){\r\n        this.doRotateAction();\r\n\r\n        var tiledwidth = Game.MapUtil.GetMapBlockSize().width;\r\n        var Offset = (this.width - tiledwidth) * 0.5;\r\n\r\n        if(this.direction == SnakeDirection.SD_Up && this.preDirection == SnakeDirection.SD_Right){\r\n            this.y += Offset;\r\n            this.x -= Offset;\r\n            // this.sprite.spriteFrame = new cc.SpriteFrame(cc.url.raw(\"resources/gamescene/head_a.png\"));\r\n        }else if(this.direction == SnakeDirection.SD_Right && this.preDirection == SnakeDirection.SD_Up){\r\n            this.x += Offset;\r\n            this.y -= Offset;\r\n        }else if(this.direction == SnakeDirection.SD_Down && this.preDirection == SnakeDirection.SD_Right){\r\n            this.x -= Offset;\r\n            this.y -= Offset;\r\n        }else if(this.direction == SnakeDirection.SD_Left && this.preDirection == SnakeDirection.SD_Down){\r\n            this.x -= Offset;\r\n            this.y += Offset;\r\n        }else if(this.direction == SnakeDirection.SD_Up && this.preDirection == SnakeDirection.SD_Left){\r\n            this.x += Offset;\r\n            this.y += Offset;\r\n        }else if(this.direction == SnakeDirection.SD_Left && this.preDirection == SnakeDirection.SD_Up){\r\n            this.x -= Offset;\r\n            this.y -= Offset;\r\n        }else if(this.direction == SnakeDirection.SD_Right && this.preDirection == SnakeDirection.SD_Down){\r\n            this.x += Offset;\r\n            this.y += Offset;\r\n        }else if(this.direction == SnakeDirection.SD_Down && this.preDirection == SnakeDirection.SD_Left){\r\n            this.x += Offset;\r\n            this.y -= Offset;\r\n        }\r\n    },\r\n\r\n    doRotateAction(){\r\n        var rotate = 0;\r\n\r\n        switch(this.direction){\r\n            case MoveDirection.MD_Left:\r\n            {\r\n                rotate = -180;\r\n                break;\r\n            }\r\n            case MoveDirection.MD_Right:\r\n            {\r\n                rotate = 0;\r\n                break;\r\n            }\r\n            case MoveDirection.MD_Up:\r\n            {\r\n                rotate = -90;\r\n                break;\r\n            }\r\n            case MoveDirection.MD_Down:\r\n            {\r\n                rotate = 90;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.rotation = rotate;\r\n\r\n        this._super();\r\n    },\r\n\r\n    //正常表情\r\n    doNormalFace(){\r\n        this.sprite.spriteFrame = new cc.SpriteFrame(cc.url.raw(\"resources/gamescene/head1.png\"));\r\n    },\r\n\r\n    //流口水表情\r\n    doAtTheMouthFace(){\r\n        this.sprite.spriteFrame = new cc.SpriteFrame(cc.url.raw(\"resources/gamescene/head2.png\"));\r\n    },\r\n\r\n    //满足表情\r\n    doMeetFace(){\r\n        this.sprite.spriteFrame = new cc.SpriteFrame(cc.url.raw(\"resources/gamescene/head3.png\"));\r\n    },\r\n\r\n    //绝望表情\r\n    doDespairFace(){\r\n        this.sprite.spriteFrame = new cc.SpriteFrame(cc.url.raw(\"resources/gamescene/head5.png\"));\r\n    },\r\n});"]}